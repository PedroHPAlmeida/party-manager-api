name: Java Workflow
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

  test:
    needs: build
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Test with Maven
        run: mvn test

  docker:
    needs: build
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.set_image_name.outputs.IMAGE_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ vars.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set Docker image name
        id: set_image_name
        run: |
          echo "IMAGE_NAME=${{ vars.DOCKER_HUB_USER }}/party-manager-api:${{ github.ref_name }}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.set_image_name.outputs.IMAGE_NAME }}

  deploy:
    if: ${{ github.ref_name == 'master' }}
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.3
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          image-url: ${{ needs.docker.outputs.image_name }}
          wait-for-deployment: true
